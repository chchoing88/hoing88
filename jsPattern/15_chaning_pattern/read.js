/**
 * 체이너블 메서드
 * 
 * 체이너블 메서드는 동일한 객체의 여러 함수를 하나의 문에서 호출하는 기법이다.
 * 
 * 여기서는 콘퍼런스 웹사이트가 제공하는 연계 api를 체이너블 메서드로 구현한 모듈을 만든다. 
 * 콘퍼런스 발표자들은 대부분 자기가 발표한 프레젠테이션에 대한 청충의 피드백을 받고 싶어 한다. 
 * 주최자는 참가자들이 행사장 주변에 비치된 키오스크 기기, 또는 간단히 모바일로 발표자 평가 페이지에 접속할 수 있도록
 * 웹사이트 기능을 확장하기로한다. 
 * 
 * 지금부터 개발할 presenterEvaluation 은 청충들이 평가 페이지에서 입력한 정보를 수집하는 모듈로,
 * 평가 데이터는 서버로 전송되어 저장되며 콘퍼런스 폐막 이후 각 발표자에게 집계한 자료를 제공할 계획이다. 
 * 
 * 
 * presenterEvaluation 이 아이가 할일은 간단하다. 
 * 
 * this를 반환하는 메서드는 체이너블하다. 
 * 
 * 프로미스 then의 경우에는 
 * 이룸/버림 처리기를 프라미스에 덧붙이고 처리기의 반환값으로 귀결될 새 프라미스를 반환한다. 
 * 
 * 곧 then을 호출하는것은 같은 타입의 객체를 반환하는거지만 기존에 있는 객체를 반환하는것은 아니다. 
 * 
 * then을 호출하는것은 원래 promise에 이룸/버림 처리기를 추가하여 원래 promise가 귀결될때 둘중 하나가 실행되게 한다. 
 * 실행되고 나면 새로운 promise를 반환하게 된다. 
 */